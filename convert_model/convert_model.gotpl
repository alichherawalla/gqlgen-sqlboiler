{{ reserveImport "context"  }}
{{ reserveImport "fmt"  }}
{{ reserveImport "io"  }}
{{ reserveImport "strconv"  }}
{{ reserveImport "time"  }}
{{ reserveImport "sync"  }}
{{ reserveImport "errors"  }}
{{ reserveImport "bytes"  }}

{{ reserveImport "github.com/99designs/gqlgen/handler" }}
{{ reserveImport "github.com/vektah/gqlparser" }}
{{ reserveImport "github.com/vektah/gqlparser/ast" }}
{{ reserveImport "github.com/99designs/gqlgen/graphql" }}
{{ reserveImport "github.com/99designs/gqlgen/graphql/introspection" }}
{{ reserveImport $.TypeName }}

{{ $root := . }}


func ID(ID string, entityName string) int {
	i, _ := strconv.ParseInt(strings.TrimPrefix(ID, entityName+"_"), 10, 64)
	return int(i)
}

func UniqueID(id int, entityName string) string {
	return entityName + "_" + strconv.Itoa(id)
}

{{ range $object := .Objects -}}
	{{ $object }}
	func {{$object.Name}}ToBoiler(obj *{{$object.Name}}) *models.{{$object.Name}}  {
		return &models.{{$object.Name}}{
		{{ range $field := $object.Fields -}}
			{{$field.GoFieldName}}: 
				{{- if not $object.Root }}obj.{{$field.GoFieldName}}{{end -}}
				{{- range $arg := $field.Args}}
					{{- $arg.VarName}}
				{{- end }},
		{{ end -}}
	}
}
{{ end }}